{"version":3,"sources":["aframe-components/camera-controls.js","state/cell-types.js","state/flag-types.js","state/selectors.js","state/actions.js","state/game-state.js","state/reducers.js","state/sagas.js","state/store.js","components/Controllers.js","components/Camera.js","components/Wall.js","components/Exit.js","components/Tile.js","components/Mine.js","components/Cell.js","components/MazeBackground.js","components/Robot.js","components/Maze.js","initial-map.js","state/generateMap.js","components/Button.js","components/Display.js","useIsInVr.js","components/Platform.js","components/Scene.js","index.js"],"names":["CONTROLS","registerComponent","schema","enabled","default","minX","Number","NEGATIVE_INFINITY","maxX","POSITIVE_INFINITY","minZ","maxZ","acceleration","easing","init","this","pressedKeys","velocity","THREE","directionVector","rotationEuler","onKeyDown","bind","onKeyUp","window","addEventListener","remove","removeEventListener","event","includes","code","tick","time","delta","data","x","z","isEmpty","updateVelocity","copy","multiplyScalar","rotation","el","getAttribute","set","degToRad","y","applyEuler","object3D","position","add","setX","setZ","scaledEasing","Math","pow","abs","accelerationDelta","KeyA","KeyD","KeyW","KeyS","CELL_TYPES","MINE","WALL","ROBOT","EXIT","EMPTY","FLAG_TYPES","getRobotPosition","createSelector","state","robot","identity","getGameState","getCells","cells","getFlagCount","reduce","acc","cell","flag","getMineCount","type","getFloorOffset","floorOffset","getMapHeight","height","getMapWidth","width","getMapCentreX","getMapCentreY","getIsMapSolved","every","isActivated","getExitPosition","find","END_GAME","createAction","success","INITIALISE_MAP_FROM_STRING","map","INITIALISE_MAP","TRIGGER_ROBOT_TILE","TRIGGER_TILE","ACTIVATE_TILE","MOVE_ROBOT_RELATIVE","MOVE_ROBOT","SET_FLAG","CYCLE_FLAG","SET_FLOOR_OFFSET","offset","GAME_STATE","reducer","createReducer","flags","handleAction","action","robotCell","payload","PI","index","findIndex","adjust","item","activateTrigger","moveRobotRelative","cycleFlag","triggerRobotTile","initialiseMapFromString","rootSaga","FLAGS","select","put","adjacent","nextX","nextY","call","current","length","newX","newY","targetCell","atan2","isAllMinesFlagged","exitX","exitY","nextFlag","indexOf","mines","rows","split","reverse","row","i","j","flat","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","actionCreators","applyMiddleware","run","Controllers","React","memo","controlsRef","useRef","dispatch","useDispatch","useEffect","axisSubscription","fromEvent","pipe","filter","detail","changed","axis","throttleTime","tap","coords","subscribe","buttonSubscription","id","keys","document","moveRightSubscription","moveLeftSubscription","moveUpSubscription","moveDownSubscription","unsubscribe","ref","laser-controls","line","raycaster","tracked-controls","Camera","useSelector","centerY","class","cursor","fov","camera-controls","wasd-controls","Wall","mixin","Exit","TEXT_COLOURS","Tile","planeRef","handleClick","useCallback","minOpacity","useMemo","utils","entity","setComponentProperty","sub1","sub2","align","wrap-count","color","font","value","onClick","material","Mine","animation","animation__rotation","Cell","contents","MazeBackground","centreX","centreY","key","Robot","previousRot","pos","setAttribute","fromDeg","toDeg","MathUtils","radToDeg","src","scale","Maze","renderedCells","getRandomInt","min","max","floor","random","generateMap","mapArr","Array","fill","amount","addedMines","timesSkipped","addMines","asString","join","console","log","PRESS_VECTOR","Vector3","Button","props","onPress","others","mouseenter","mouseleave","mousedown","mouseup","sub","FlagCount","CursorControls","IndexControls","Display","isInVr","useState","setIsInVr","enterVr","exitVr","useIsInVr","handleResetClick","process","geometry","Platform","Scene","stats","undefined","alt","crossOrigin","gltf-model","light","ReactDOM","unstable_createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.322c801a.chunk.js","sourcesContent":["import { registerComponent } from 'aframe';\nimport { isEmpty } from 'ramda';\nimport * as THREE from 'three';\n\nconst MAX_DELTA = 0.2;\nconst CLAMP_VELOCITY = 0.00001;\n\nconst CONTROLS = ['KeyA', 'KeyD', 'KeyS', 'KeyW'];\n\nregisterComponent('camera-controls', {\n    schema: {\n        enabled: { default: true },\n        minX: { default: Number.NEGATIVE_INFINITY },\n        maxX: { default: Number.POSITIVE_INFINITY },\n        minZ: { default: Number.NEGATIVE_INFINITY },\n        maxZ: { default: Number.POSITIVE_INFINITY },\n        acceleration: { default: 100 },\n        easing: { default: 1.1 },\n    },\n    init: function () {\n        this.pressedKeys = {};\n        this.velocity = new THREE.Vector3(0, 0, 0);\n        this.directionVector = new THREE.Vector3(0, 0, 0);\n        this.rotationEuler = new THREE.Euler(0, 0, 0, 'YXZ');\n\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n\n        window.addEventListener('keydown', this.onKeyDown);\n        window.addEventListener('keyup', this.onKeyUp);\n    },\n    remove: function () {\n        window.removeEventListener('keyup', this.onKeyUp);\n        window.removeEventListener('keydown', this.onKeyDown);\n    },\n    onKeyDown: function (event) {\n        if (CONTROLS.includes(event.code)) {\n            this.pressedKeys[event.code] = true;\n        }\n    },\n    onKeyUp: function (event) {\n        if (CONTROLS.includes(event.code)) {\n            delete this.pressedKeys[event.code];\n        }\n    },\n    tick: function (time, delta) {\n        if (!this.data.enabled) {\n            return;\n        }\n\n        if (!this.velocity.x && !this.velocity.z && isEmpty(this.pressedKeys)) {\n            return;\n        }\n\n        delta = delta / 1000;\n        this.updateVelocity(delta);\n\n        if (!this.velocity.x && !this.velocity.z) {\n            return;\n        }\n\n        this.directionVector.copy(this.velocity);\n        this.directionVector.multiplyScalar(delta);\n\n        const rotation = this.el.getAttribute('rotation');\n\n        this.rotationEuler.set(0, THREE.MathUtils.degToRad(rotation.y), 0);\n        this.directionVector.applyEuler(this.rotationEuler);\n\n        this.el.object3D.position.add(this.directionVector);\n\n        if (this.el.object3D.position.x > this.data.maxX) {\n            this.el.object3D.position.setX(this.data.maxX);\n        } else if (this.el.object3D.position.x < this.data.minX) {\n            this.el.object3D.position.setX(this.data.minX);\n        }\n\n        if (this.el.object3D.position.z > this.data.maxZ) {\n            this.el.object3D.position.setZ(this.data.maxZ);\n        } else if (this.el.object3D.position.z < this.data.minZ) {\n            this.el.object3D.position.setZ(this.data.minZ);\n        }\n    },\n    updateVelocity: function (delta) {\n        if (delta > MAX_DELTA) {\n            this.velocity.x = 0;\n            this.velocity.z = 0;\n            return;\n        }\n\n        // TODO movement 'floatyness' seems to be FPS dependant\n        const scaledEasing = Math.pow(1 / this.data.easing, delta * 30);\n\n        if (this.velocity.x !== 0) {\n            this.velocity.x -= this.velocity.x * scaledEasing;\n        }\n        if (this.velocity.z !== 0) {\n            this.velocity.z -= this.velocity.z * scaledEasing;\n        }\n\n        if (Math.abs(this.velocity.x) < CLAMP_VELOCITY) {\n            this.velocity.x = 0;\n        }\n        if (Math.abs(this.velocity.z) < CLAMP_VELOCITY) {\n            this.velocity.z = 0;\n        }\n\n        const accelerationDelta = this.data.acceleration * delta;\n\n        if (this.pressedKeys.KeyA) {\n            this.velocity.x -= accelerationDelta;\n        }\n        if (this.pressedKeys.KeyD) {\n            this.velocity.x += accelerationDelta;\n        }\n        if (this.pressedKeys.KeyW) {\n            this.velocity.z -= accelerationDelta;\n        }\n        if (this.pressedKeys.KeyS) {\n            this.velocity.z += accelerationDelta;\n        }\n    },\n});\n","export const CELL_TYPES = {\n    MINE: '^',\n    WALL: '+',\n    ROBOT: 'R',\n    EXIT: 'E',\n    EMPTY: '#',\n};\n","export const FLAG_TYPES = {\n    NONE: null,\n    FLAGGED: 'M',\n    MAYBE: '?',\n};\n","import { CELL_TYPES } from './cell-types';\nimport { FLAG_TYPES } from './flag-types';\n\nimport { identity } from 'ramda';\nimport { createSelector } from 'reselect';\n\nexport const getRobotPosition = createSelector((state) => state.robot, identity);\n\nexport const getGameState = createSelector((state) => state.state, identity);\n\nexport const getCells = createSelector((state) => state.cells, identity);\n\nexport const getFlagCount = createSelector(\n    (state) => state.cells,\n    (cells) => cells.reduce((acc, cell) => (cell.flag === FLAG_TYPES.FLAGGED ? acc + 1 : acc), 0)\n);\n\nexport const getMineCount = createSelector(\n    (state) => state.cells,\n    (cells) => cells.reduce((acc, cell) => (cell.type === CELL_TYPES.MINE ? acc + 1 : acc), 0)\n);\n\nexport const getFloorOffset = createSelector((state) => state.floorOffset, identity);\n\nexport const getMapHeight = createSelector((state) => state.height, identity);\nexport const getMapWidth = createSelector((state) => state.width, identity);\n\nexport const getMapCentreX = createSelector(getMapWidth, (width) => (width - 1) / 2);\n\nexport const getMapCentreY = createSelector(getMapHeight, (height) => (height - 1) / 2);\n\nexport const getIsMapSolved = createSelector(getCells, (cells) =>\n    cells.every((cell) => {\n        switch (cell.type) {\n            case CELL_TYPES.MINE:\n                return cell.flag === FLAG_TYPES.FLAGGED;\n            case CELL_TYPES.EMPTY:\n            case CELL_TYPES.ROBOT:\n                return cell.isActivated;\n            case CELL_TYPES.WALL:\n            case CELL_TYPES.EXIT:\n            default:\n                return true;\n        }\n    })\n);\n\nexport const getExitPosition = createSelector(\n    getCells,\n    (cells) => cells.find((x) => x.type === CELL_TYPES.EXIT).position\n);\n","import { createAction } from 'typesafe-redux-helpers';\n\nexport const END_GAME = createAction('End Game', (success) => ({ success }));\n\nexport const INITIALISE_MAP_FROM_STRING = createAction('Generate Map From String', (map) => ({ map }));\n\nexport const INITIALISE_MAP = createAction('Initialise Map', ({ cells, width, height }) => ({\n    cells,\n    width,\n    height,\n}));\n\nexport const TRIGGER_ROBOT_TILE = createAction('Trigger Robot Tile');\n\nexport const TRIGGER_TILE = createAction('Trigger Tile', ({ x, y }) => ({\n    x,\n    y,\n}));\n\nexport const ACTIVATE_TILE = createAction('Activate Tile', ({ x, y }) => ({\n    position: { x, y },\n}));\n\nexport const MOVE_ROBOT_RELATIVE = createAction('Move Robot Relative', ({ x, y }) => ({\n    delta: { x, y },\n}));\n\nexport const MOVE_ROBOT = createAction('Move Robot', ({ x, y, rotation }) => ({\n    x,\n    y,\n    rotation,\n}));\n\nexport const SET_FLAG = createAction('Set Flag', ({ x, y, flag }) => ({\n    position: { x, y },\n    flag,\n}));\n\nexport const CYCLE_FLAG = createAction('Cycle Flag', ({ x, y }) => ({\n    position: { x, y },\n}));\n\nexport const SET_FLOOR_OFFSET = createAction('Set Floor Offset', (offset) => ({\n    offset,\n}));\n","export const GAME_STATE = {\n    INIT: 'init',\n    RUNNING: 'running',\n    WON: 'won',\n    LOST: 'lost',\n};\n","import { ACTIVATE_TILE, END_GAME, INITIALISE_MAP, MOVE_ROBOT, SET_FLAG, SET_FLOOR_OFFSET } from './actions';\nimport { CELL_TYPES } from './cell-types';\nimport { GAME_STATE } from './game-state';\n\nimport { adjust, findIndex } from 'ramda';\nimport { createReducer } from 'typesafe-redux-helpers';\n\nexport const reducer = createReducer({\n    cells: [],\n    width: 0,\n    height: 0,\n    robot: { x: 0, y: 0, rotation: 0 },\n    state: GAME_STATE.INIT,\n    flags: [],\n    floorOffset: 6,\n})\n    .handleAction(INITIALISE_MAP, (state, action) => {\n        const robotCell = action.payload.cells.find((cell) => cell.type === CELL_TYPES.ROBOT);\n\n        return {\n            ...state,\n            state: GAME_STATE.RUNNING,\n            cells: action.payload.cells,\n            width: action.payload.width,\n            height: action.payload.height,\n            robot: robotCell ? { ...robotCell.position, rotation: Math.PI / 2 } : state.robot,\n        };\n    })\n    .handleAction(END_GAME, (state, action) => ({\n        ...state,\n        state: action.payload.success ? GAME_STATE.WON : GAME_STATE.LOST,\n    }))\n    .handleAction(MOVE_ROBOT, (state, action) => ({\n        ...state,\n        robot: action.payload,\n    }))\n    .handleAction(ACTIVATE_TILE, (state, action) => {\n        const index = findIndex(\n            (cell) => cell.position.x === action.payload.position.x && cell.position.y === action.payload.position.y,\n            state.cells\n        );\n\n        if (index < 0 || state.cells[index].isActivated) {\n            return state;\n        }\n\n        return {\n            ...state,\n            cells: adjust(\n                index,\n                (item) => ({\n                    ...item,\n                    isActivated: true,\n                    flag: null,\n                }),\n                state.cells\n            ),\n        };\n    })\n    .handleAction(SET_FLAG, (state, action) => {\n        const index = findIndex(\n            (cell) => cell.position.x === action.payload.position.x && cell.position.y === action.payload.position.y,\n            state.cells\n        );\n\n        if (index < 0) {\n            return state;\n        }\n\n        return {\n            ...state,\n            cells: adjust(\n                index,\n                (item) => ({\n                    ...item,\n                    flag: action.payload.flag,\n                }),\n                state.cells\n            ),\n        };\n    })\n    .handleAction(SET_FLOOR_OFFSET, (state, action) => ({\n        ...state,\n        floorOffset: action.payload.offset,\n    }));\n","import {\n    ACTIVATE_TILE,\n    CYCLE_FLAG,\n    END_GAME,\n    INITIALISE_MAP,\n    INITIALISE_MAP_FROM_STRING,\n    MOVE_ROBOT,\n    MOVE_ROBOT_RELATIVE,\n    SET_FLAG,\n    TRIGGER_ROBOT_TILE,\n    TRIGGER_TILE,\n} from './actions';\nimport { CELL_TYPES } from './cell-types';\nimport { FLAG_TYPES } from './flag-types';\nimport {\n    getCells,\n    getExitPosition,\n    getFlagCount,\n    getIsMapSolved,\n    getMapHeight,\n    getMapWidth,\n    getMineCount,\n    getRobotPosition,\n} from './selectors';\n\nimport { takeEvery, put, select, call } from 'redux-saga/effects';\n\nexport const FLAGS = [FLAG_TYPES.NONE, FLAG_TYPES.FLAGGED, FLAG_TYPES.MAYBE];\n\nfunction* activateTrigger({ payload: { x, y } }) {\n    const cells = yield select(getCells);\n\n    const cell = cells.find((cell) => cell.position.x === x && cell.position.y === y);\n\n    if (!cell || cell.isActivated || cell.type === CELL_TYPES.WALL) {\n        return;\n    }\n\n    yield put(ACTIVATE_TILE({ x, y }));\n\n    if (cell.type === CELL_TYPES.MINE) {\n        yield put(END_GAME(false));\n        return;\n    }\n\n    if (cell.adjacent !== 0) {\n        // no need to iterate unless it's a 0 cell\n        return;\n    }\n\n    const width = yield select(getMapWidth);\n    const height = yield select(getMapHeight);\n\n    for (let nextX = x - 1; nextX <= x + 1; nextX++) {\n        for (let nextY = y - 1; nextY <= y + 1; nextY++) {\n            // out of bounds\n            if (nextX < 0 || nextX > width - 1 || nextY < 0 || nextY > height - 1) {\n                continue;\n            }\n\n            // this cell\n            if (nextX === x && nextY === y) {\n                continue;\n            }\n\n            yield call(activateTrigger, { payload: { x: nextX, y: nextY } });\n        }\n    }\n}\n\nfunction* moveRobotRelative({\n    payload: {\n        delta: { x, y },\n    },\n}) {\n    const cells = yield select(getCells);\n    const current = yield select(getRobotPosition);\n\n    if (!cells.length) {\n        return;\n    }\n\n    let newX = x + current.x;\n    let newY = y + current.y;\n\n    const targetCell = cells.find((cell) => cell.position.x === newX && cell.position.y === newY);\n\n    if (!targetCell) {\n        return;\n    }\n\n    const rotation = Math.atan2(y, x) + Math.PI / 2;\n\n    const isAllMinesFlagged = yield select(getIsMapSolved);\n\n    // don't allow movement into a wall but allow the rotation to happen\n    if (targetCell.type === CELL_TYPES.WALL || (targetCell.type === CELL_TYPES.EXIT && !isAllMinesFlagged)) {\n        newX = current.x;\n        newY = current.y;\n    }\n\n    yield put(MOVE_ROBOT({ x: newX, y: newY, rotation }));\n\n    if (targetCell.type === CELL_TYPES.MINE) {\n        yield put(TRIGGER_TILE({ x: newX, y: newY }));\n        return;\n    }\n\n    const { x: exitX, y: exitY } = yield select(getExitPosition);\n\n    if (isAllMinesFlagged && exitX === newX && exitY === newY) {\n        yield put(END_GAME(true));\n    }\n}\n\nexport function* cycleFlag({\n    payload: {\n        position: { x, y },\n    },\n}) {\n    const cells = yield select(getCells);\n\n    const cell = cells.find((cell) => cell.position.x === x && cell.position.y === y);\n\n    if (!cell) {\n        return;\n    }\n\n    let nextFlag = FLAGS[(FLAGS.indexOf(cell.flag) + 1) % FLAGS.length];\n\n    // don't allow past the number of mines in the field, if they flag\n    // past that point then just toggle between maybe and nothing\n    if (nextFlag === FLAG_TYPES.FLAGGED) {\n        const flags = yield select(getFlagCount);\n        const mines = yield select(getMineCount);\n\n        if (flags >= mines) {\n            nextFlag = FLAG_TYPES.MAYBE;\n        }\n    }\n\n    yield put(\n        SET_FLAG({\n            x,\n            y,\n            flag: nextFlag,\n        })\n    );\n}\n\nfunction* triggerRobotTile() {\n    const { x, y } = yield select(getRobotPosition);\n\n    yield put(TRIGGER_TILE({ x, y }));\n}\n\nfunction* initialiseMapFromString({ payload: { map } }) {\n    const rows = map.split('\\n').reverse();\n\n    const cells = rows\n        .map((row, y) =>\n            row.split('').map((cell, x) => {\n                const data = {\n                    type: cell,\n                    adjacent: 0,\n                    flag: FLAG_TYPES.NONE,\n                    position: { x, y },\n                    isActivated: false,\n                };\n\n                for (let i = x - 1; i <= x + 1; i++) {\n                    for (let j = y - 1; j <= y + 1; j++) {\n                        // out of bounds\n                        if (i < 0 || j < 0 || i > row.length - 1 || j > rows.length - 1) {\n                            continue;\n                        }\n\n                        if (rows[j][i] === CELL_TYPES.MINE) {\n                            data.adjacent++;\n                        }\n                    }\n                }\n\n                return data;\n            })\n        )\n        .flat();\n\n    yield put(INITIALISE_MAP({ cells, height: rows.length, width: rows[0].length }));\n}\n\nexport function* rootSaga() {\n    yield takeEvery(INITIALISE_MAP_FROM_STRING, initialiseMapFromString);\n    yield takeEvery(TRIGGER_ROBOT_TILE, triggerRobotTile);\n    yield takeEvery(CYCLE_FLAG, cycleFlag);\n    yield takeEvery(TRIGGER_TILE, activateTrigger);\n    yield takeEvery(MOVE_ROBOT_RELATIVE, moveRobotRelative);\n}\n","import { ACTIVATE_TILE, MOVE_ROBOT, CYCLE_FLAG, SET_FLOOR_OFFSET, TRIGGER_TILE } from './actions';\nimport { reducer } from './reducers';\nimport { rootSaga } from './sagas';\n\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n    reducer,\n    composeWithDevTools({\n        actionCreators: {\n            ACTIVATE_TILE: (x, y) => ACTIVATE_TILE({ x, y }),\n            TRIGGER_TILE: (x, y) => TRIGGER_TILE({ x, y }),\n            CYCLE_FLAG: (x, y) => CYCLE_FLAG({ x, y }),\n            MOVE_ROBOT: (x, y) => MOVE_ROBOT({ x, y }),\n            SET_FLOOR_OFFSET: (offset) => SET_FLOOR_OFFSET(offset),\n        },\n    })(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n","import { MOVE_ROBOT_RELATIVE, TRIGGER_ROBOT_TILE } from '../state/actions';\nimport { store } from '../state/store';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fromEvent } from 'rxjs';\nimport { filter, map, tap, throttleTime } from 'rxjs/operators';\n\nconst AXIS_DEADZONE = 0.15;\n\n// For chrome beta + index controller for VR. Found chrome to be better perf but too buggy,\n// had to use master branch aframe (which in turn broke firefox) and then controllers were\n// a little wonky and any kind of JS blocking caused UI to fade to steamvr home... Firefox\n// was much nicer to deal with. Chrome still fine with 2D mode though\n// const AXIS_INDEX_X = 0;\n// const AXIS_INDEX_Y = 1;\n// const Y_INVERTED = true;\n// const ACTIVATION_BUTTON_INDEX = 1;\n\n// For firefox + index controller\nconst AXIS_INDEX_X = 2;\nconst AXIS_INDEX_Y = 3;\nconst Y_INVERTED = false;\nconst ACTIVATION_BUTTON_INDEX = 4;\n\nexport const Controllers = React.memo(function Controllers() {\n    const controlsRef = useRef();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const axisSubscription = fromEvent(controlsRef.current, 'axismove')\n            .pipe(\n                // don't take events that don't have either axis changed or have both axis in the deadzone\n                filter(\n                    ({ detail: { changed, axis } }) =>\n                        (changed[AXIS_INDEX_X] || changed[AXIS_INDEX_Y]) &&\n                        (Math.abs(axis[AXIS_INDEX_X]) > AXIS_DEADZONE || Math.abs(axis[AXIS_INDEX_Y]) > AXIS_DEADZONE)\n                ),\n                // too many events be bad\n                throttleTime(200),\n                // only keep whichever axis is larger and turn it into a 1 or -1 depending on sign\n                map((event) => {\n                    if (Math.abs(event.detail.axis[AXIS_INDEX_X]) > Math.abs(event.detail.axis[AXIS_INDEX_Y])) {\n                        return {\n                            x: event.detail.axis[AXIS_INDEX_X] > 0 ? 1 : -1,\n                            y: 0,\n                        };\n                    } else {\n                        return {\n                            x: 0,\n                            y: event.detail.axis[AXIS_INDEX_Y] > 0 ? 1 : -1,\n                        };\n                    }\n                }),\n                tap((coords) => {\n                    if (Y_INVERTED) {\n                        coords.y *= -1;\n                    }\n                })\n            )\n            .subscribe((delta) => {\n                dispatch(MOVE_ROBOT_RELATIVE(delta));\n            });\n\n        const buttonSubscription = fromEvent(controlsRef.current, 'buttondown')\n            .pipe(filter((event) => event.detail.id === ACTIVATION_BUTTON_INDEX))\n            .subscribe(() => {\n                dispatch(TRIGGER_ROBOT_TILE());\n            });\n\n        const keys = fromEvent(document, 'keydown').pipe(map((event) => event.code));\n\n        const moveRightSubscription = keys\n            .pipe(\n                filter((code) => code === 'ArrowRight'),\n                throttleTime(200)\n            )\n            .subscribe(() => store.dispatch(MOVE_ROBOT_RELATIVE({ x: 1, y: 0 })));\n\n        const moveLeftSubscription = keys\n            .pipe(\n                filter((code) => code === 'ArrowLeft'),\n                throttleTime(200)\n            )\n            .subscribe(() => store.dispatch(MOVE_ROBOT_RELATIVE({ x: -1, y: 0 })));\n\n        const moveUpSubscription = keys\n            .pipe(\n                filter((code) => code === 'ArrowUp'),\n                throttleTime(200)\n            )\n            .subscribe(() => store.dispatch(MOVE_ROBOT_RELATIVE({ x: 0, y: 1 })));\n\n        const moveDownSubscription = keys\n            .pipe(\n                filter((code) => code === 'ArrowDown'),\n                throttleTime(200)\n            )\n            .subscribe(() => store.dispatch(MOVE_ROBOT_RELATIVE({ x: 0, y: -1 })));\n\n        keys.pipe(filter((code) => code === 'Space')).subscribe(() => {\n            store.dispatch(TRIGGER_ROBOT_TILE());\n        });\n\n        return () => {\n            axisSubscription.unsubscribe();\n            buttonSubscription.unsubscribe();\n            moveLeftSubscription.unsubscribe();\n            moveRightSubscription.unsubscribe();\n            moveUpSubscription.unsubscribe();\n            moveDownSubscription.unsubscribe();\n        };\n    }, [dispatch]);\n\n    return (\n        <a-entity>\n            {/*<a-entity hand-controls=\"hand: left\"></a-entity>*/}\n            <a-entity\n                ref={controlsRef}\n                laser-controls=\"hand: right; model: false\" // model broken and causes perf issues\n                line=\"color: red; opacity: 0.75\"\n                raycaster=\"objects: .clickable; far: 30\"\n                tracked-controls=\"idPrefix: OpenVR; controller: 0;\"\n            />\n        </a-entity>\n    );\n});\n","import { getFloorOffset, getMapCentreY } from '../state/selectors';\n\nimport { Controllers } from './Controllers';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const Camera = React.memo(function Camera() {\n    const ref = useRef();\n\n    const floorOffset = useSelector(getFloorOffset);\n    const centerY = useSelector(getMapCentreY);\n\n    useEffect(() => {\n        ref.current.object3D.position.set(0, floorOffset + centerY, 0);\n    }, [floorOffset, centerY]);\n\n    return (\n        <a-entity class=\"rig\" ref={ref}>\n            <Controllers />\n            <a-camera\n                cursor=\"rayOrigin: mouse\"\n                raycaster=\"objects: .clickable; far: 30\"\n                id=\"camera\"\n                fov=\"75\"\n                camera-controls=\"enabled: true; minX: -1.4; maxX: 1.4; minZ: -1.4; maxZ: 1.4; acceleration: 30; easing: 300\"\n                wasd-controls=\"enabled: false\"\n            />\n        </a-entity>\n    );\n});\n","import React from 'react';\n\nexport const Wall = React.memo(function Wall() {\n    return <a-entity class=\"wall\" mixin=\"wall-box\"></a-entity>;\n});\n","import { getIsMapSolved } from '../state/selectors';\n\nimport { Wall } from './Wall';\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const Exit = React.memo(function Exit() {\n    const isAllMinesFlagged = useSelector(getIsMapSolved);\n\n    if (!isAllMinesFlagged) {\n        return <Wall />;\n    }\n\n    return <a-entity></a-entity>;\n});\n","import { CYCLE_FLAG } from '../state/actions';\n\nimport { utils } from 'aframe';\nimport React, { useCallback, useEffect, useRef, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fromEvent } from 'rxjs';\n\nconst TEXT_COLOURS = ['', '#3E007A', '#FF0072', '#680097', '#F100C3', '#21004F', 'green', 'orange', 'red'];\n\nexport const Tile = React.memo(function Tile({\n    cell: {\n        flag,\n        position: { x, y },\n        adjacent,\n        isActivated,\n    },\n}) {\n    const planeRef = useRef();\n    const dispatch = useDispatch();\n\n    const handleClick = useCallback(() => {\n        dispatch(CYCLE_FLAG({ x, y }));\n    }, [dispatch, x, y]);\n\n    const minOpacity = useMemo(() => {\n        if (isActivated) {\n            return 0.2;\n        }\n\n        if (flag) {\n            return 0.4;\n        }\n\n        return 0;\n    }, [isActivated, flag]);\n\n    useEffect(() => {\n        utils.entity.setComponentProperty(planeRef.current, 'material.opacity', minOpacity);\n\n        const sub1 = fromEvent(planeRef.current, 'mouseenter').subscribe(() => {\n            utils.entity.setComponentProperty(planeRef.current, 'material.opacity', 0.6);\n        });\n        const sub2 = fromEvent(planeRef.current, 'mouseleave').subscribe(() => {\n            utils.entity.setComponentProperty(planeRef.current, 'material.opacity', minOpacity);\n        });\n\n        return () => {\n            sub1.unsubscribe();\n            sub2.unsubscribe();\n        };\n    }, [minOpacity]);\n\n    return (\n        <a-entity class=\"tile\" position=\"0 0 -0.45\">\n            {flag && (\n                <a-text\n                    class=\"flag\"\n                    align=\"center\"\n                    wrap-count=\"1\"\n                    width=\"0.75\"\n                    height=\"0.75\"\n                    color=\"red\"\n                    font=\"monoid\"\n                    value={flag}\n                    position=\"0 0 0.04\"\n                />\n            )}\n            {adjacent > 0 && isActivated && (\n                <a-text\n                    value={adjacent}\n                    align=\"center\"\n                    wrap-count=\"1\"\n                    width=\"0.75\"\n                    height=\"0.75\"\n                    color={TEXT_COLOURS[adjacent]}\n                    font=\"monoid\"\n                    position=\"0 0 0.04\"\n                />\n            )}\n            <a-plane\n                ref={planeRef}\n                class={isActivated ? 'activated' : 'clickable'}\n                onClick={handleClick}\n                width=\"0.95\"\n                height=\"0.95\"\n                material={`color: ${flag ? 'black' : 'gray'}`}\n                position=\"0 0 0.02\"\n            />\n        </a-entity>\n    );\n});\n","import { GAME_STATE } from '../state/game-state';\nimport { getGameState } from '../state/selectors';\n\nimport { Tile } from './Tile';\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const Mine = React.memo(function Mine({ cell }) {\n    const state = useSelector(getGameState);\n\n    if (state === GAME_STATE.RUNNING && !cell.isActivated) {\n        return <Tile cell={cell} />;\n    }\n\n    // TODO add a random animation offset/delay/duration so they're not all in sync if they appear at the same time\n    return (\n        <a-entity\n            class=\"mine\"\n            position=\"0 0 -0.25\"\n            mixin=\"mine-model\"\n            animation=\"property: position; from: 0 -0.1 0; to: 0 0.1 0; loop: true; dur: 2000; dir: alternate; easing: easeInOutQuad;\"\n            animation__rotation=\"property: rotation; from: 0 0 0; to: 0 360 0; loop: true; dur: 5000; easing: linear\"\n        />\n    );\n});\n","import { CELL_TYPES } from '../state/cell-types';\n\nimport { Exit } from './Exit';\nimport { Mine } from './Mine';\nimport { Tile } from './Tile';\nimport { Wall } from './Wall';\n\nimport React, { useEffect, useRef } from 'react';\n\nexport const Cell = React.memo(function Cell({ cell }) {\n    const ref = useRef();\n\n    useEffect(() => {\n        ref.current.object3D.position.set(cell.position.x, cell.position.y, 0);\n    }, [cell.position.x, cell.position.y]);\n\n    let contents;\n\n    if (cell.type === CELL_TYPES.WALL) {\n        contents = <Wall />;\n    } else if (cell.type === CELL_TYPES.EXIT) {\n        contents = <Exit />;\n    } else if (cell.type === CELL_TYPES.MINE) {\n        contents = <Mine cell={cell} />;\n    } else {\n        contents = <Tile cell={cell} />;\n    }\n\n    return (\n        <a-entity class=\"cell\" ref={ref}>\n            {contents}\n        </a-entity>\n    );\n});\n","import { getMapCentreX, getMapCentreY, getMapHeight, getMapWidth } from '../state/selectors';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const MazeBackground = React.memo(function MazeBackground() {\n    const ref = useRef();\n\n    const centreX = useSelector(getMapCentreX);\n    const centreY = useSelector(getMapCentreY);\n    const width = useSelector(getMapWidth);\n    const height = useSelector(getMapHeight);\n\n    useEffect(() => {\n        ref.current.object3D.position.set(centreX, centreY, -0.5);\n    }, [centreX, centreY]);\n\n    return (\n        <a-entity ref={ref} class=\"maze-background\">\n            <a-plane\n                // need to set a key here because aframe doesn't update the repeat numbers properly so this forces react\n                // to create a new element in the DOM when it changes as opposed to reusing the old one\n                key={`${width}x${height}`}\n                class=\"maze-background_grid\"\n                width={width}\n                height={height}\n                material={`src: #grid-full; transparent: true; roughness: 0.4; sphericalEnvMap: #sky; alphaTest: 0.05; repeat: ${width} ${height}`}\n            />\n            <a-plane\n                class=\"maze-background_block\"\n                width={width}\n                height={height}\n                material=\"color: white; opacity: 0.2; transparent: true;\"\n            />\n        </a-entity>\n    );\n});\n","import { getRobotPosition } from '../state/selectors';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MathUtils } from 'three';\n\nexport const Robot = React.memo(function Robot() {\n    const ref = useRef();\n    const previousRot = useRef(0);\n    const pos = useSelector(getRobotPosition);\n\n    useEffect(() => {\n        ref.current.setAttribute('animation__pos', `property: position; to: ${pos.x} ${pos.y} 0; dur: 200;`);\n    }, [pos.x, pos.y]);\n\n    useEffect(() => {\n        let fromDeg = previousRot.current;\n        let toDeg = MathUtils.radToDeg(pos.rotation);\n\n        if (fromDeg === 270 && toDeg === 0) {\n            toDeg = 360;\n        } else if (fromDeg === 0 && toDeg === 270) {\n            fromDeg = 360;\n        }\n\n        ref.current.setAttribute(\n            'animation__rot',\n            `property: rotation; from: 90 ${fromDeg} 0; to: 90 ${toDeg} 0; dur: 100;`\n        );\n        previousRot.current = toDeg;\n    }, [pos.rotation]);\n\n    return <a-gltf-model class=\"robot\" ref={ref} src=\"#android-gltf\" scale=\"0.25 0.25 0.25\"></a-gltf-model>;\n});\n","import { INITIAL_MAP } from '../initial-map';\nimport { INITIALISE_MAP_FROM_STRING } from '../state/actions';\nimport { getCells, getFloorOffset, getMapCentreX } from '../state/selectors';\n\nimport { Cell } from './Cell';\nimport { MazeBackground } from './MazeBackground';\nimport { Robot } from './Robot';\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Maze = React.memo(function Maze() {\n    const ref = useRef();\n    const cells = useSelector(getCells);\n    const centreX = useSelector(getMapCentreX);\n    const floorOffset = useSelector(getFloorOffset);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(INITIALISE_MAP_FROM_STRING(INITIAL_MAP));\n    }, [dispatch]);\n\n    useEffect(() => {\n        ref.current.object3D.position.set(-centreX, floorOffset, -20);\n    }, [centreX, floorOffset]);\n\n    const renderedCells = cells.map((cell) => <Cell cell={cell} key={`${cell.position.x},${cell.position.y}`} />);\n\n    return (\n        <a-entity ref={ref} class=\"maze\">\n            <Robot />\n            {renderedCells}\n            <MazeBackground />\n        </a-entity>\n    );\n});\n","export const INITIAL_MAP = `+++++++++++++++++++++++++++++++\n+####################^###^####E\n+#####^##########^############+\n+###########################^#+\n+###^^^#############^######^##+\n+##########^##################+\n+#############+++#############+\n+####^########+++#####^####^##+\n+#############+++#############+\n+#############^###############+\n+######^############^##^######+\n+R##^####################^####+\n+++++++++++++++++++++++++++++++`;\n","import { CELL_TYPES } from './cell-types';\n\nconst getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n// adds up to the amount of mines into the cell grid\n// into existing empty spaces only\nconst addMines = ({ cells, width, height, amount }) => {\n    let addedMines = 0;\n    let timesSkipped = 0;\n\n    while (addedMines < amount) {\n        const x = getRandomInt(1, width - 2);\n        const y = getRandomInt(1, height - 2);\n\n        // TODO use pathfinding to ensure can still exit?\n        // can do it to ensure there is a path from start to exit without\n        // needing to walk on a mine/through a wall, still can be really\n        // hard to win sometimes even with this because you'll have to\n        // sometimes walk blindly into unknown areas\n\n        if (cells[y][x] !== CELL_TYPES.EMPTY) {\n            timesSkipped++;\n\n            // getting too hard to find an empty space just give up\n            if (timesSkipped > 25) {\n                return;\n            }\n\n            continue;\n        }\n\n        cells[y][x] = CELL_TYPES.MINE;\n        addedMines++;\n    }\n};\n\nexport const generateMap = () => {\n    const width = getRandomInt(10, 35);\n    const height = getRandomInt(10, 35);\n\n    const mapArr = Array(height);\n\n    // top and bottom layer all walls\n    mapArr[0] = Array(width).fill(CELL_TYPES.WALL);\n    mapArr[mapArr.length - 1] = Array(width).fill(CELL_TYPES.WALL);\n\n    // other rows all start and end with a wall\n    for (let y = 1; y < height - 1; y++) {\n        mapArr[y] = [CELL_TYPES.WALL, ...Array(width - 2).fill(CELL_TYPES.EMPTY), CELL_TYPES.WALL];\n    }\n\n    // make robot 1,1\n    mapArr[1][1] = CELL_TYPES.ROBOT;\n\n    // pick random wall on the right side\n    mapArr[getRandomInt(1, height - 2)][width - 1] = CELL_TYPES.EXIT;\n\n    // randomly place mines in the area where not wall or robot or exit\n    const minesToAdd = getRandomInt(15, 40);\n\n    // TODO place some random walls inside?\n\n    addMines({ cells: mapArr, width, height, amount: minesToAdd });\n\n    const asString = mapArr\n        .reverse() // y is inverted\n        .map((row) => row.join(''))\n        .join('\\n');\n\n    console.log('new map', asString);\n\n    return asString;\n};\n","import { utils } from 'aframe';\nimport React, { useEffect, useRef } from 'react';\nimport { fromEvent } from 'rxjs';\nimport { Vector3 } from 'three';\n\nconst PRESS_VECTOR = new Vector3(0, -0.015, 0);\n\nexport const Button = React.memo(function Button(props) {\n    const { onPress, ...others } = props;\n\n    const ref = useRef();\n\n    useEffect(() => {\n        const mouseenter = fromEvent(ref.current, 'mouseenter').subscribe(() => {\n            utils.entity.setComponentProperty(ref.current, 'material.opacity', 0.6);\n        });\n        const mouseleave = fromEvent(ref.current, 'mouseleave').subscribe(() => {\n            utils.entity.setComponentProperty(ref.current, 'material.opacity', 1);\n        });\n\n        const mousedown = fromEvent(ref.current, 'mousedown').subscribe(() => {\n            ref.current.object3D.position.add(PRESS_VECTOR);\n        });\n\n        const mouseup = fromEvent(ref.current, 'mouseup').subscribe(() => {\n            ref.current.object3D.position.sub(PRESS_VECTOR);\n        });\n\n        return () => {\n            mouseenter.unsubscribe();\n            mouseleave.unsubscribe();\n            mousedown.unsubscribe();\n            mouseup.unsubscribe();\n        };\n    }, []);\n\n    return (\n        <a-entity {...others}>\n            <a-entity ref={ref} class=\"clickable\" mixin=\"button-top\" onClick={onPress} />\n            <a-entity mixin=\"button-base\" />\n        </a-entity>\n    );\n});\n","import { INITIALISE_MAP_FROM_STRING } from '../state/actions';\nimport { GAME_STATE } from '../state/game-state';\nimport { generateMap } from '../state/generateMap';\nimport { getFlagCount, getGameState, getMineCount } from '../state/selectors';\nimport { useIsInVr } from '../useIsInVr';\n\nimport { Button } from './Button';\n\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst FlagCount = React.memo(function FlagCount() {\n    const flags = useSelector(getFlagCount);\n    const mines = useSelector(getMineCount);\n\n    return (\n        <a-entity>\n            <a-text\n                id=\"mines-remaining\"\n                value={`Flagged: ${flags} / ${mines}`}\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"3\"\n                position=\"-1.35 0.2 0\"\n            ></a-text>\n        </a-entity>\n    );\n});\n\nconst CursorControls = React.memo(function CursorControls() {\n    return (\n        <a-entity>\n            <a-text\n                value=\"Left Click: Cycle flags\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.2 0\"\n            ></a-text>\n            <a-text\n                value=\"Space: Activate the tile the robot is on\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.3 0\"\n            ></a-text>\n            <a-text\n                value=\"Arrow Keys: Move Robot\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.4 0\"\n            ></a-text>\n        </a-entity>\n    );\n});\n\nconst IndexControls = React.memo(function IndexControls() {\n    return (\n        <a-entity>\n            <a-text\n                value=\"Point + Trigger: Cycle flags\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.2 0\"\n            ></a-text>\n            <a-text\n                value=\"A: Activate the tile the robot is on\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.3 0\"\n            ></a-text>\n            <a-text\n                value=\"Thumbstick: Move Robot\"\n                font=\"aileronsemibold\"\n                color=\"#680097\"\n                width=\"2\"\n                position=\"-1.35 -0.4 0\"\n            ></a-text>\n        </a-entity>\n    );\n});\n\n// TODO make this display not look terrible\nexport const Display = React.memo(function Display() {\n    const state = useSelector(getGameState);\n    const dispatch = useDispatch();\n\n    const isInVr = useIsInVr();\n\n    const handleResetClick = useCallback(() => {\n        const map = generateMap();\n        dispatch(INITIALISE_MAP_FROM_STRING(map));\n    }, [dispatch]);\n\n    let contents;\n\n    switch (state) {\n        case GAME_STATE.LOST:\n            contents = (\n                <a-text value=\"You Lost!\" font=\"aileronsemibold\" color=\"#680097\" width=\"4\" position=\"-1 0 0\"></a-text>\n            );\n            break;\n        case GAME_STATE.WON:\n            contents = (\n                <a-text value=\"You Won!\" font=\"aileronsemibold\" color=\"#680097\" width=\"4\" position=\"-1 0 0\"></a-text>\n            );\n            break;\n        default:\n            contents = (\n                <a-entity>\n                    <a-text\n                        value=\"Flag all mines and activate all tiles to unlock exit\"\n                        font=\"aileronsemibold\"\n                        color=\"#680097\"\n                        width=\"3\"\n                        position=\"-1.35 0.4 0\"\n                    ></a-text>\n                    <FlagCount />\n                    {isInVr ? <IndexControls /> : <CursorControls />}\n                </a-entity>\n            );\n    }\n\n    return (\n        <a-entity>\n            {contents}\n            <a-text value=\"RESET >\" font=\"aileronsemibold\" color=\"#680097\" width=\"3\" position=\"0.7 -0.29 0\"></a-text>\n            <Button rotation=\"90 0 0\" position=\"1.3 -0.3 0\" onPress={handleResetClick} />\n\n            {process.env.NODE_ENV === 'development' && (\n                <>\n                    <a-text value=\"FPS:\" width=\"1\" position=\"-1.48 .45 0\"></a-text>\n                    <a-entity fps-counter position=\"-0.85 .45 0\" />\n                </>\n            )}\n\n            <a-entity\n                geometry=\"primitive: plane; height: 1; width: 3\"\n                material=\"roughness: 0.6; metalness: 0.9; sphericalEnvMap: #sky; color: gray;\"\n            ></a-entity>\n        </a-entity>\n    );\n});\n","import { useCallback, useEffect, useState } from 'react';\n\nexport const useIsInVr = () => {\n    const [isInVr, setIsInVr] = useState(false);\n\n    const enterVr = useCallback(() => setIsInVr(true), [setIsInVr]);\n    const exitVr = useCallback(() => setIsInVr(false), [setIsInVr]);\n\n    useEffect(() => {\n        window.addEventListener('enter-vr', enterVr);\n        window.addEventListener('exit-vr', exitVr);\n\n        return () => {\n            window.removeEventListener('enter-vr', enterVr);\n            window.removeEventListener('exit-vr', exitVr);\n        };\n    }, [setIsInVr, enterVr, exitVr]);\n\n    return isInVr;\n};\n","import { getFloorOffset, getMapCentreY } from '../state/selectors';\n\nimport { Display } from './Display';\n\nimport React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nexport const Platform = React.memo(function Platform() {\n    const ref = useRef();\n    const floorOffset = useSelector(getFloorOffset);\n    const centerY = useSelector(getMapCentreY);\n\n    useEffect(() => {\n        ref.current.object3D.position.set(0, floorOffset + centerY, 0);\n    }, [floorOffset, centerY]);\n\n    return (\n        <a-entity class=\"platform\" ref={ref}>\n            <a-entity\n                class=\"platform_floor\"\n                geometry=\"primitive: plane; height: 3; width: 3;\"\n                material=\"depthTest: false; color: gray; opacity: 0.4; alphaTest: 0.05;\"\n                rotation=\"-90 0 0\"\n            ></a-entity>\n\n            <a-entity class=\"control-panel\" position=\"0 0.359 -1.849\" rotation=\"-45 0 0\">\n                <Display />\n            </a-entity>\n        </a-entity>\n    );\n});\n","import { Camera } from './Camera';\nimport { Maze } from './Maze';\nimport { Platform } from './Platform';\n\nimport React from 'react';\n\nexport const Scene = React.memo(function Scene() {\n    return (\n        <a-scene stats={process.env.NODE_ENV === 'development' ? '' : undefined}>\n            <a-assets>\n                <img id=\"sky\" alt=\"sky\" src=\"sky.jpg\" crossOrigin=\"anonymous\" />\n                <img id=\"grid\" alt=\"grid texture\" src=\"grid.png\" crossOrigin=\"anonymous\" />\n                <img id=\"grid-full\" alt=\"grid texture\" src=\"grid-full.png\" crossOrigin=\"anonymous\" />\n\n                <a-asset-item id=\"android-gltf\" src=\"android.gltf\" />\n                <a-asset-item id=\"mine-gltf\" src=\"mine.gltf\" />\n                <a-asset-item\n                    id=\"numberFont\"\n                    src=\"https://cdn.glitch.com/c719c986-c0c5-48b8-967c-3cd8b8aa17f3%2FdawningOfANewDayRegular.typeface.json?1490305922844\"\n                />\n\n                <a-mixin\n                    id=\"wall-box\"\n                    geometry=\"primitive: box; width: 1; height: 1; depth: 1;\"\n                    material=\"roughness: 0.4; metalness: 0.9; sphericalEnvMap: #sky; color: gray;\"\n                />\n                <a-mixin id=\"mine-model\" gltf-model=\"#mine-gltf\" scale=\"0.01 0.01 0.01\" />\n                <a-mixin\n                    id=\"button-top\"\n                    geometry=\"primitive: box; width: 0.18; height: 0.025; depth: 0.18;\"\n                    position=\"0 0.02 0\"\n                    material=\"color: red\"\n                />\n                <a-mixin\n                    id=\"button-base\"\n                    geometry=\"primitive: cone; radiusTop: 0.15; radiusBottom: 0.19; height: 0.02; segmentsRadial: 4; segmentsHeight: 1\"\n                    material=\"color: white\"\n                    rotation=\"0 45 0\"\n                />\n            </a-assets>\n\n            <Camera />\n\n            <Maze />\n\n            <Platform />\n\n            {/* Ground. */}\n            <a-entity\n                geometry=\"primitive: plane; width: 10000; height: 10000;\"\n                rotation=\"-90 0 0\"\n                material=\"src: #grid; offset: .5 .5; repeat: 10000 10000; transparent: true; shader: standard; roughness: 0.4; sphericalEnvMap: #sky; alphaTest: 0.05\"\n            ></a-entity>\n\n            {/* Background sky. */}\n            <a-sky src=\"#sky\" rotation=\"0 -90 0\"></a-sky>\n\n            {/* Lighting  */}\n            <a-entity light=\"type: directional; color: #EEE; intensity: 0.5\" position=\"-1 1 0\"></a-entity>\n            <a-entity light=\"color: #ffaaff; intensity: 1.5\" position=\"5 5 5\"></a-entity>\n            <a-entity light=\"color: white; intensity: 0.5\" position=\"-5 5 15\"></a-entity>\n            <a-entity light=\"color: white; type: ambient;\"></a-entity>\n        </a-scene>\n    );\n});\n","import 'aframe';\nimport 'aframe-fps-counter-component';\n\nimport './aframe-components/camera-controls';\n\nimport { Scene } from './components/Scene';\nimport { store } from './state/store';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.unstable_createRoot(document.getElementById('root')).render(\n    <Provider store={store}>\n        <Scene />\n    </Provider>\n);\n"],"sourceRoot":""}